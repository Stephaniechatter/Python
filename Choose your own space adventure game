import pygame
import sys

# Initialize Pygame
pygame.init()

# Set up the display window
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Space Adventure: Extended Edition")

# Define colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GRAY = (150, 150, 150)

# Font for text
font = pygame.font.Font(None, 36)

# Define scenes and options using a dictionary
scenes = {
    1: {
        'text1': "You awaken aboard the starship Stellaris after emerging from cryosleep,",
        'text2': "en route to explore a distant galaxy. The ship's AI, Nova, informs you of",
        'text3': "a critical malfunction in the navigation system.",
        'options': [
            {"text": "1. Investigate immediately", "next_scene": 3},
            {"text": "2. Consult maintenance logs", "next_scene": 5}
        ]
    },
    3: {
        'text1': "As you investigate the navigation system, you discover an alien organism",
        'text2': "has infiltrated the circuitry. Nova suggests either purging the system",
        'text3': "or attempting to communicate with the organism.",
        'options': [
            {"text": "1. Purge the system", "next_scene": 7},
            {"text": "2. Communicate with the organism", "next_scene": 9}
        ]
    },
    5: {
        'text1': "You uncover a cryptic message in the maintenance logs hinting at an ancient",
        'text2': "alien artifact nearby. Nova recommends altering course to investigate.",
        'options': [
            {"text": "1. Follow the artifact lead", "next_scene": 11},
            {"text": "2. Focus on navigation repair", "next_scene": 13}
        ]
    },
    7: {
        'text1': "The purge is successful, but it triggers a temporal anomaly.",
        'text2': "You find yourself thrown back in time to a crucial moment in the galaxy's history.",
        'text3': "Your choices here determine whether you can return to your timeline.",
        'options': [
            {"text": "1. Make choices to return", "next_scene": 15},
            {"text": "2. Embrace your new timeline", "next_scene": 16}
        ]
    },
    9: {
        'text1': "The organism turns out to be a symbiotic life form that enhances the ship's capabilities.",
        'text2': "It offers to guide you to its homeworld, where you can learn more about its civilization.",
        'options': [
            {"text": "1. Accept the offer", "next_scene": 17},
            {"text": "2. Decline and continue exploring", "next_scene": 18}
        ]
    },
    11: {
        'text1': "You discover the artifact on a desolate planet. It grants you the power of",
        'text2': "interstellar travel without the need for a ship. You face a dilemma:",
        'text3': "return to Stellaris or explore the universe alone.",
        'options': [
            {"text": "1. Return to Stellaris", "next_scene": 19},
            {"text": "2. Explore the universe alone", "next_scene": 20}
        ]
    },
    13: {
        'text1': "You manage to repair the navigation, but the malfunction was caused by",
        'text2': "a hidden distress signal from a nearby alien outpost.",
        'text3': "Your choices here determine whether you aid the aliens or continue your journey.",
        'options': [
            {"text": "1. Aid the aliens", "next_scene": 21},
            {"text": "2. Continue your journey", "next_scene": 22}
        ]
    },
    15: {
        'text1': "You successfully navigate the temporal anomaly and return to your original timeline,",
        'text2': "enriched with knowledge and experiences from the past.",
        'text3': "Congratulations! You have completed your space adventure with a good ending."
    },
    16: {
        'text1': "Embracing the new timeline, you forge a new path through the galaxy,",
        'text2': "shaping the future with your newfound abilities.",
        'text3': "You have completed your space adventure with a bad ending."
    },
    17: {
        'text1': "You accept the offer and journey to the symbiotic life form's homeworld,",
        'text2': "where you learn about their advanced civilization.",
        'text3': "Congratulations! You have completed your space adventure with a good ending."
    },
    18: {
        'text1': "You decline the offer, choosing to continue exploring the galaxy alone.",
        'text2': "Your journey leads you to new discoveries and adventures.",
        'text3': "You have completed your space adventure with a bad ending."
    },
    19: {
        'text1': "You return to Stellaris with the artifact, sharing its knowledge",
        'text2': "and technology with your fellow crewmates.",
        'text3': "Congratulations! You have completed your space adventure with a good ending."
    },
    20: {
        'text1': "You embark on a solitary journey through the universe,",
        'text2': "exploring the mysteries of deep space on your own terms.",
        'text3': "You have completed your space adventure with a bad ending."
    },
    21: {
        'text1': "You aid the aliens and forge an alliance with their outpost,",
        'text2': "establishing peaceful relations and mutual cooperation.",
        'text3': "Congratulations! You have completed your space adventure with a good ending."
    },
    22: {
        'text1': "You decide to continue your journey, leaving the distress signal behind,",
        'text2': "but always mindful of the potential dangers lurking in the cosmos.",
        'text3': "You have completed your space adventure with a bad ending."
    },
    # Additional scenes (example)
    23: {
        'text1': "While exploring a nebula, you encounter a sentient gas cloud.",
        'text2': "It offers to reveal the secrets of hyperspace navigation in exchange for your help.",
        'options': [
            {"text": "1. Accept the offer", "next_scene": 24},
            {"text": "2. Decline and continue exploring", "next_scene": 25}
        ]
    },
    24: {
        'text1': "The gas cloud guides you through hyperspace, significantly enhancing",
        'text2': "Stellaris' capabilities. You become a hero of the galaxy.",
        'text3': "Congratulations! You have completed your space adventure with a heroic ending."
    },
    25: {
        'text1': "You continue exploring, leaving the gas cloud behind.",
        'text2': "Your journey leads you to new challenges and discoveries.",
        'text3': "You have completed your space adventure with an uncertain ending."
    },
    # Add more scenes as needed
}

# Function to render current scene and options
def render_scene(scene):
    if scene in scenes:
        text1 = font.render(scenes[scene]['text1'], True, WHITE)
        text2 = font.render(scenes[scene]['text2'], True, WHITE)
        text3 = font.render(scenes[scene].get('text3', ''), True, WHITE)

        screen.blit(text1, (50, 50))
        screen.blit(text2, (50, 100))
        if text3:
            screen.blit(text3, (50, 150))

        y_offset = 250
        if 'options' in scenes[scene]:
            for option in scenes[scene]['options']:
                option_text = font.render(option['text'], True, WHITE)
                option_rect = pygame.Rect(50, y_offset, 300, 50)
                pygame.draw.rect(screen, GRAY, option_rect)
                screen.blit(option_text, (option_rect.x + 10, option_rect.y + 10))
                y_offset += 100
        else:
            # No options, display ending message
            ending_text = font.render("Game Over: No further options", True, WHITE)
            screen.blit(ending_text, (50, y_offset))
    else:
        # Scene not found, display error
        error_text = font.render("Error: Scene not found", True, WHITE)
        screen.blit(error_text, (50, 50))

# Initialize game state
current_scene = 1
running = True

# Game loop
while running:
    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            mouse_x, mouse_y = event.pos
            for option in scenes[current_scene].get('options', []):
                option_rect = pygame.Rect(50, 250 + scenes[current_scene]['options'].index(option) * 100, 300, 50)
                if option_rect.collidepoint(mouse_x, mouse_y):
                    current_scene = option['next_scene']
                    break

    # Update screen
    screen.fill(BLACK)
    render_scene(current_scene)
    pygame.display.flip()

# Quit Pygame
pygame.quit()
sys.exit()
